define(["./when-208fe5b0","./Cartesian2-b4b7b0b3","./arrayRemoveDuplicates-3a9a9480","./BoundingRectangle-67be6fe0","./Transforms-73e77b72","./ComponentDatatype-2da3a966","./PolylineVolumeGeometryLibrary-2b7ba2ef","./Check-5e798bbf","./GeometryAttribute-b541caa6","./GeometryAttributes-b0b294d8","./IndexDatatype-3bc916b1","./Math-8386669c","./PolygonPipeline-b445e3f3","./RuntimeError-7f634f5d","./WebGLConstants-5e2a49ab","./EllipsoidTangentPlane-69cc10ff","./AxisAlignedBoundingBox-122de82b","./IntersectionTests-40db2afa","./Plane-b91bfb59","./PolylinePipeline-b7eedbaf","./EllipsoidGeodesic-92f0d3cc","./EllipsoidRhumbLine-73a4e3eb"],(function(e,i,n,t,a,o,r,l,s,p,d,u,c,y,h,f,g,b,m,E,v,P){"use strict";function _(n){var t=(n=e.defaultValue(n,e.defaultValue.EMPTY_OBJECT)).polylinePositions,a=n.shapePositions;this._positions=t,this._shape=a,this._ellipsoid=i.Ellipsoid.clone(e.defaultValue(n.ellipsoid,i.Ellipsoid.WGS84)),this._cornerType=e.defaultValue(n.cornerType,r.CornerType.ROUNDED),this._granularity=e.defaultValue(n.granularity,u.CesiumMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry",t=1+t.length*i.Cartesian3.packedLength,t+=1+a.length*i.Cartesian2.packedLength,this.packedLength=t+i.Ellipsoid.packedLength+2}_.pack=function(n,t,a){var o;a=e.defaultValue(a,0);var r=n._positions,l=r.length;for(t[a++]=l,o=0;o<l;++o,a+=i.Cartesian3.packedLength)i.Cartesian3.pack(r[o],t,a);var s=n._shape;l=s.length;for(t[a++]=l,o=0;o<l;++o,a+=i.Cartesian2.packedLength)i.Cartesian2.pack(s[o],t,a);return i.Ellipsoid.pack(n._ellipsoid,t,a),a+=i.Ellipsoid.packedLength,t[a++]=n._cornerType,t[a]=n._granularity,t};var k=i.Ellipsoid.clone(i.Ellipsoid.UNIT_SPHERE),C={polylinePositions:void 0,shapePositions:void 0,ellipsoid:k,height:void 0,cornerType:void 0,granularity:void 0};_.unpack=function(n,t,a){t=e.defaultValue(t,0);for(var o=n[t++],r=new Array(o),l=0;l<o;++l,t+=i.Cartesian3.packedLength)r[l]=i.Cartesian3.unpack(n,t);o=n[t++];var s=new Array(o);for(l=0;l<o;++l,t+=i.Cartesian2.packedLength)s[l]=i.Cartesian2.unpack(n,t);var p=i.Ellipsoid.unpack(n,t,k);t+=i.Ellipsoid.packedLength;var d=n[t++],u=n[t];return e.defined(a)?(a._positions=r,a._shape=s,a._ellipsoid=i.Ellipsoid.clone(p,a._ellipsoid),a._cornerType=d,a._granularity=u,a):(C.polylinePositions=r,C.shapePositions=s,C.cornerType=d,C.granularity=u,new _(C))};var L=new t.BoundingRectangle;return _.createGeometry=function(e){var l=e._positions,u=n.arrayRemoveDuplicates(l,i.Cartesian3.equalsEpsilon),y=e._shape;y=r.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(y);if(!(u.length<2||y.length<3))return c.PolygonPipeline.computeWindingOrder2D(y)===c.WindingOrder.CLOCKWISE&&y.reverse(),l=t.BoundingRectangle.fromPoints(y,L),function(e,i){var n=new p.GeometryAttributes;n.position=new s.GeometryAttribute({componentDatatype:o.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e});var t=i.length,r=(i=n.position.values.length/3,e.length/3/t),l=d.IndexDatatype.createTypedArray(i,2*t*(1+r)),u=0,c=0,y=c*t;for(g=0;g<t-1;g++)l[u++]=g+y,l[u++]=g+y+1;for(l[u++]=t-1+y,l[u++]=y,y=(c=r-1)*t,g=0;g<t-1;g++)l[u++]=g+y,l[u++]=g+y+1;for(l[u++]=t-1+y,l[u++]=y,c=0;c<r-1;c++)for(var h=t*c,f=h+t,g=0;g<t;g++)l[u++]=g+h,l[u++]=g+f;return new s.Geometry({attributes:n,indices:d.IndexDatatype.createTypedArray(i,l),boundingSphere:a.BoundingSphere.fromVertices(e),primitiveType:s.PrimitiveType.LINES})}(r.PolylineVolumeGeometryLibrary.computePositions(u,y,l,e,!1),y)},function(n,t){return(n=e.defined(t)?_.unpack(n,t):n)._ellipsoid=i.Ellipsoid.clone(n._ellipsoid),_.createGeometry(n)}}));